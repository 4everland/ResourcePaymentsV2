/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import { Provider } from "@ethersproject/providers";
import type {
  IHostingReceiptsV1,
  IHostingReceiptsV1Interface,
} from "../IHostingReceiptsV1";

const _abi = [
  {
    inputs: [
      {
        internalType: "bytes28",
        name: "uuid",
        type: "bytes28",
      },
      {
        internalType: "uint256",
        name: "level",
        type: "uint256",
      },
    ],
    name: "canBuy",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes28",
        name: "uuid",
        type: "bytes28",
      },
    ],
    name: "canRenew",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes28",
        name: "uuid",
        type: "bytes28",
      },
      {
        internalType: "uint256",
        name: "level",
        type: "uint256",
      },
    ],
    name: "canUpgrade",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes28",
        name: "uuid",
        type: "bytes28",
      },
    ],
    name: "receipts",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "to",
            type: "address",
          },
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "level",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "boughtTime",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "expiration",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalValue",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "realCost",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "bandwidth",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "storageAmount",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "buildingTime",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "pricePerMonth",
                type: "uint256",
              },
              {
                internalType: "bytes28",
                name: "to",
                type: "bytes28",
              },
              {
                internalType: "bool",
                name: "isValid",
                type: "bool",
              },
            ],
            internalType: "struct IHostingCombos.Combo",
            name: "combo",
            type: "tuple",
          },
        ],
        internalType: "struct IHostingReceiptsV1.Receipt",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

export class IHostingReceiptsV1__factory {
  static readonly abi = _abi;
  static createInterface(): IHostingReceiptsV1Interface {
    return new utils.Interface(_abi) as IHostingReceiptsV1Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IHostingReceiptsV1 {
    return new Contract(address, _abi, signerOrProvider) as IHostingReceiptsV1;
  }
}
